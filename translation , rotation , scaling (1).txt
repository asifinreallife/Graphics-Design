#include<iostream>
#include<stdio.h>
#include<GL\glut.h>
#include<math.h>
using namespace std;

int x=0;
int y=0;
int s=1;
float angle=0;
void cube(void)
{
	glClear (GL_COLOR_BUFFER_BIT);

	glColor3f (0.0, 1.0, 0.0);
	glBegin(GL_LINE_LOOP);
	glVertex2i((150*cos(angle)+x+250*sin(angle))*s,(-150*sin(angle)+y+250*cos(angle))*s);
	glVertex2i((250*cos(angle)+x+250*sin(angle))*s,(-250*sin(angle)+y+250*cos(angle))*s);
	glVertex2i((250*cos(angle)+x+150*sin(angle))*s,(-250*sin(angle)+y+150*cos(angle))*s);
	glVertex2i((150*cos(angle)+x+150*sin(angle))*s,(-150*sin(angle)+y+150*cos(angle))*s);
	glEnd();

	glFlush ();
	glColor3f (1.0, 0.0, 0.0);
	glBegin(GL_LINE_LOOP);
	glVertex2i(150,250);
	glVertex2i(250,250);
	glVertex2i(250,150);
	glVertex2i(150,150);
	glEnd();

	glFlush ();
}

void myInit (void)
{
	glClearColor(1.0, 1.0, 1.0, 0.0);
	glColor3f(0.0f, 0.0f, 0.0f);
	glPointSize(4.0);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluOrtho2D(-640.0, 640.0, -480.0, 480.0);
}


void main(int argc, char** argv)
{
	int opt;
	cout<<"Choose a Transformation: "<<endl;
	cout<<"1.Translation"<<endl;
	cout<<"2.Rotation"<<endl;
	cout<<"3.Enlargement"<<endl;
	cout<<"4. Original"<<endl;
	cin>>opt;
	switch(opt)
	{
		case 1:
		{
			cout<<"Input x: ";
			cin>>x;
			cout<<endl;
			cout<<"Input y: ";
			cin>>y;
			cout<<endl;
			break;
		}
		case 2:
			{
				cout<<"Input Angle: ";
				cin>>angle;
				cout<<endl;
				break;
			}
		case 3:
			{
				cout<<"Input Scale Factor: ";
				cin>>s;
				cout<<endl;
				break;
			}
		case 4:{break;}
	}
	glutInit(&argc, argv);
	glutInitDisplayMode (GLUT_SINGLE | GLUT_RGB);
	glutInitWindowSize (1366, 768);
	glutInitWindowPosition (200, 300);
	glutCreateWindow ("my first attempt");
	glutDisplayFunc(cube);
	myInit ();
	glutMainLoop();
}